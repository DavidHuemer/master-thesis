[
  {
    "path": "data/code/arithmetic/MultiplyCorrect.java",
    "method": "multiply",
    "expectedResult": true
  },
  {
    "path": "data/code/arithmetic/MultiplyInCorrect.java",
    "method": "multiply",
    "expectedResult": false
  },
  {
    "path": "data/code/arithmetic/AddCorrect.java",
    "method": "add",
    "expectedResult": true
  },
  {
    "path": "data/code/arithmetic/AddIncorrect.java",
    "method": "add",
    "expectedResult": false
  },
  {
    "path": "data/code/arithmetic/SubtractCorrect.java",
    "method": "subtract",
    "expectedResult": true
  },
  {
    "path": "data/code/arithmetic/SubtractInvalidOrder.java",
    "method": "subtract",
    "expectedResult": false
  },
  {
    "path": "data/code/arithmetic/IntSquare.java",
    "method": "squareOf",
    "expectedResult": true
  },
  {
    "path": "data/code/arithmetic/IntSquareIncorrect.java",
    "method": "squareOf",
    "expectedResult": false
  },
  {
    "path": "data/code/max/Biggest.java",
    "method": "biggest",
    "expectedResult": true
  },
  {
    "path": "data/code/max/BiggestIncorrect.java",
    "method": "biggest",
    "expectedResult": false
  },
  {
    "path": "data/code/exceptionTest/ExceptionTest.java",
    "method": "test",
    "expectedResult": true
  },
  {
    "path": "data/code/exceptionTest/ExceptionTestIncorrect.java",
    "method": "test",
    "expectedResult": false
  },
  {
    "path": "data/code/abs/AbsCorrect.java",
    "method": "abs",
    "expectedResult": true
  },
  {
    "path": "data/code/abs/AbsIncorrect.java",
    "method": "abs",
    "expectedResult": false
  },
  {
    "path": "data/code/find/IndexOf.java",
    "method": "find",
    "expectedResult": true
  },
  {
    "path": "data/code/find/IndexOfIncorrect.java",
    "method": "find",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/CompareArray.java",
    "method": "compare",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/CompareArrayIncorrect.java",
    "method": "compare",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/IsAscending.java",
    "method": "isAscending",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/IsAscendingIncorrect.java",
    "method": "isAscending",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/ComputeArea.java",
    "method": "computeArea",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/ComputeAreaIncorrect.java",
    "method": "computeArea",
    "expectedResult": false
  },
  {
    "path": "data/code/find/BubbleSort.java",
    "method": "bubbleSort",
    "expectedResult": true
  },
  {
    "path": "data/code/find/BubbleSortIncorrect.java",
    "method": "bubbleSort",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/Conjunction.java",
    "method": "conjunctOf",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/ConjunctionIncorrect.java",
    "method": "conjunctOf",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/XOR.java",
    "method": "xor",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/XORIncorrect.java",
    "method": "xor",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/Temperatures.java",
    "method": "convertTemperature",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/TemperaturesIncorrect.java",
    "method": "convertTemperature",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/SetZero.java",
    "method": "setZero",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/SetZeroIncorrectLength.java",
    "method": "setZero",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/StringLength.java",
    "method": "length",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/StringLengthIncorrect.java",
    "method": "length",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/DigitRoot.java",
    "method": "digitRoot",
    "expectedResult": true
  },
  {
    "path": "data/code/find/ContainsDuplicate.java",
    "method": "containsDuplicate",
    "expectedResult": true
  },
  {
    "path": "data/code/find/ContainsDuplicateIncorrect.java",
    "method": "containsDuplicate",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/Disjunction.java",
    "method": "disjunctOf",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/DisjunctionIncorrect.java",
    "method": "disjunctOf",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/CreditCard.java",
    "method": "charge",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/CreditCardIncorrect.java",
    "method": "charge",
    "expectedResult": false
  },
  {
    "path": "data/code/find/FindFirstZero.java",
    "method": "findFirstZero",
    "expectedResult": true
  },
  {
    "path": "data/code/find/FindFirstZeroIncorrect.java",
    "method": "findFirstZero",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/DistinctArray.java",
    "method": "isDistinct",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/DistinctArrayIncorrect.java",
    "method": "isDistinct",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/GenerateString.java",
    "method": "generateString",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/GenerateStringIncorrectLength.java",
    "method": "generateString",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/IsCommonFactor.java",
    "method": "isCommonFactor",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/IsCommonFactorIncorrect.java",
    "method": "isCommonFactor",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/IsDescending.java",
    "method": "isDescending",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/IsDescendingIncorrect.java",
    "method": "isDescending",
    "expectedResult": false
  },
  {
    "path": "data/code/min/Smallest.java",
    "method": "smallest",
    "expectedResult": true
  },
  {
    "path": "data/code/min/SmallestIncorrect.java",
    "method": "smallest",
    "expectedResult": false
  },
  {
    "path": "data/code/find/LastIndexOf.java",
    "method": "lastIndexOf",
    "expectedResult": true
  },
  {
    "path": "data/code/find/LastIndexOfIncorrect.java",
    "method": "lastIndexOf",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/ParseBoolean.java",
    "method": "parse",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/ParseBooleanIncorrect.java",
    "method": "parse",
    "expectedResult": false
  },
  {
    "path": "data/code/arithmetic/Divide.java",
    "method": "divide",
    "expectedResult": true
  },
  {
    "path": "data/code/arithmetic/DivideIncorrect.java",
    "method": "divide",
    "expectedResult": false
  },
  {
    "path": "data/code/comparison/RangeCheck.java",
    "method": "rangeCheck",
    "expectedResult": true
  },
  {
    "path": "data/code/comparison/RangeCheckIncorrect.java",
    "method": "rangeCheck",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/CopyOfRange.java",
    "method": "copyOfRange",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/CopyOfRangeIncorrect.java",
    "method": "copyOfRange",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/RandomInt.java",
    "method": "randomInt",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/RandomIntIncorrect.java",
    "method": "randomInt",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/CombineArray.java",
    "method": "combine",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/CombineArrayIncorrect.java",
    "method": "combine",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/ReverseArray.java",
    "method": "reverse",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/ReverseArrayIncorrect.java",
    "method": "reverse",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/RemoveElements.java",
    "method": "removeElement",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/RemoveElementsIncorrect.java",
    "method": "removeElement",
    "expectedResult": false
  },
  {
    "path": "data/code/arithmetic/StringIndexOf.java",
    "method": "indexOf",
    "expectedResult": true
  },
  {
    "path": "data/code/arithmetic/StringIndexOfIncorrect.java",
    "method": "indexOf",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/SplitString.java",
    "method": "split",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/SplitStringIncorrect.java",
    "method": "split",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/StringConcat.java",
    "method": "concat",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/StringConcatIncorrect.java",
    "method": "concat",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/PrimeCheck.java",
    "method": "isPrime",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/PrimeCheckIncorrect.java",
    "method": "isPrime",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/PrimeNumberGenerator.java",
    "method": "generatePrimes",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/PrimeNumberGeneratorIncorrect.java",
    "method": "generatePrimes",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/LeapYear.java",
    "method": "isLeapYear",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/LeapYearIncorrect.java",
    "method": "isLeapYear",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/Withdraw.java",
    "method": "withdraw",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/WithdrawIncorrect.java",
    "method": "withdraw",
    "expectedResult": false
  },
  {
    "path": "data/code/arithmetic/AddWithMax.java",
    "method": "addWithMax",
    "expectedResult": true
  },
  {
    "path": "data/code/arithmetic/AddWithMaxIncorrect.java",
    "method": "addWithMax",
    "expectedResult": false
  },
  {
    "path": "data/code/arithmetic/Pow.java",
    "method": "pow",
    "expectedResult": true
  },
  {
    "path": "data/code/arithmetic/PowIncorrect.java",
    "method": "pow",
    "expectedResult": false
  },
  {
    "path": "data/code/compute/Dart.java",
    "method": "calculateScore",
    "expectedResult": true
  },
  {
    "path": "data/code/compute/DartIncorrect.java",
    "method": "calculateScore",
    "expectedResult": false
  }
]